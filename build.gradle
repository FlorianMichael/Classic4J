plugins {
    id "java"
    id "maven-publish"
    id "signing"
}

archivesBaseName = "Classic4J"
version = "2.0.1"
group = "de.florianmichael"

configurations {
    implementation.extendsFrom lib
    api.extendsFrom lib
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly "com.google.code.gson:gson:2.10.1"
}

java {
    withSourcesJar()
    withJavadocJar()

    sourceCompatibility = JavaVersion.VERSION_16
    targetCompatibility = JavaVersion.VERSION_16
}

jar {
    dependsOn configurations.lib
    from {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        configurations.lib.collect {
            zipTree(it)
        }
    } {
        exclude "META-INF/*.RSA", "META-INF/*.SF", "META-INF/*.DSA"
    }
    from("LICENSE") {
        rename {
            "${it}_${project.archivesBaseName}"
        }
    }
}

publishing {
    repositories {
        maven {
            name = "reposilite"
            def releasesUrl = "https://maven.lenni0451.net/releases"
            def snapshotsUrl = "https://maven.lenni0451.net/snapshots"
            url = project.version.endsWith("SNAPSHOT") ? snapshotsUrl : releasesUrl

            credentials(PasswordCredentials)
            authentication {
                basic(BasicAuthentication)
            }
        }
        maven {
            name = "ossrh"
            def releasesUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = project.version.endsWith("SNAPSHOT") ? snapshotsUrl : releasesUrl

            credentials(PasswordCredentials)
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
    publications {
        maven(MavenPublication) {
            artifactId = project.archivesBaseName
            groupId = project.group
            version = project.version

            from components.java

            pom {
                name = artifactId
                description = "Java implementation of the ClassiCube and BetaCraft protocol"
                url = "https://github.com/FlorianMichael/Classic4J"
                licenses {
                    license {
                        name = "Apache-2.0 license"
                        url = "https://github.com/FlorianMichael/Classic4J/blob/main/LICENSE"
                    }
                }
                developers {
                    developer {
                        id = "FlorianMichael"
                    }
                }
                scm {
                    connection = "scm:git:git://github.com/FlorianMichael/Classic4J.git"
                    developerConnection = "scm:git:ssh://github.com/FlorianMichael/Classic4J.git"
                    url = "github.com/FlorianMichael/Classic4J"
                }
            }
        }
    }
}

signing {
    setRequired false
    sign configurations.archives
    sign publishing.publications.maven
}

project.tasks.withType(PublishToMavenRepository).forEach {
    it.dependsOn(project.tasks.withType(Sign))
}
